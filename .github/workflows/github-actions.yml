name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: zlv
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Server install
        run: npm install
      - name: build
        run: npm run build
        env:
          AUTH_SECRET: abcd1234
          CEREMA_API_AUTH_TOKEN: ''
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/zlv
          DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/zlv
          NODE_ENV: production
      - name: Frontend linter
        run: npm --prefix frontend run lint
      - name: Server linter
        run: npm run lint
      - name: Frontend tests
        run: npm --prefix frontend test
      - name: Server tests
        run: npm run test
        env:
          AUTH_SECRET: abcd1234
          CEREMA_API_AUTH_TOKEN: ''
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/zlv
          DATABASE_URL_TEST: postgres://postgres:postgres@localhost:5432/zlv
      - name: Check prettier
        run: npx prettier --check .
